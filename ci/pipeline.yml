---
resources:
- name: postgres
  type: docker-image
  source:
    repository: postgres
    tag: '9.6'
- name: repo
  type: git
  source:
    uri: https://github.com/making/demo-docker-compose-in-concourse
    branch: master
- name: m2 # if you are interested in creating this cache image, check out m2 branch.
  type: docker-image
  source:
    repository: making/demo-test-container-m2
    username: {{docker-username}}
    password: {{docker-password}}
    email: {{docker-email}}
    
jobs:
- name: integration-test
  plan:
  - aggregate:
    - get: repo
    - get: postgres
      params:
        save: true
    - get: m2
  - task: say-hello
    privileged: true
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: making/dcind-jdk
      inputs:
      - name: repo
      - name: postgres
      - name: m2
      run:
        path: sh
        args: 
        - -c
        - |
          source /docker-lib.sh
          start_docker

          # This loading is not nesessary but enalbes caching by Concourse
          docker load -i postgres/image
          docker tag "$(cat postgres/image-id)" "$(cat postgres/repository):$(cat postgres/tag)"
          docker images

          cd repo
          docker-compose up -d
          mvn test -Dmaven.repo.local=../m2/rootfs/opt/m2
          docker-compose down
- name: init-m2
  plan:
    - aggregate:
      - get: repo
    - task: build-m2
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: maven
            tag: 3.3-jdk-8-alpine
        inputs:
          - name: repo
        outputs:
          - name: to-push
        run:
          path: sh
          args:
          - -c
          - |
            cd repo
            mvn clean package -Dmaven.repo.local=../m2/rootfs/opt/m2
            cd ../m2
            tar -C rootfs -cf rootfs.tar .
            mv rootfs.tar ../to-push
    - put: m2
      params:
        import_file: to-push/rootfs.tar
- name: update-m2
  plan:
    - aggregate:
      - get: repo
      - get: m2
    - task: build-m2
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: maven
            tag: 3.3-jdk-8-alpine
        inputs:
          - name: repo
          - name: m2
        outputs:
          - name: to-push
        run:
          path: sh
          args:
          - -c
          - |
            cd repo
            mvn clean package -Dmaven.repo.local=../m2/rootfs/opt/m2
            cd ../m2
            tar -C rootfs -cf rootfs.tar .
            mv rootfs.tar ../to-push
    - put: m2
      params:
        import_file: to-push/rootfs.tar